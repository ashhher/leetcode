Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4

/******************************************************************************************************/
//我的 好多null需要考虑 开头的结尾的
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode temp = new ListNode(0);
        if(l1 == null && l2 == null) 
            return null;
        else if(l1 == null && l2 != null)
            return l2;
        else if(l1 != null && l2 == null)
            return l1;
        if(l1.val <= l2.val) {
            temp = l1;
            l1 = l1.next;
        }
        else {
            temp = l2;
            l2 = l2.next;
        }
        ListNode node = temp;
        while(l1 != null && l2 != null) {
            if(l1.val <= l2.val) {
                temp.next = l1;
                l1 = l1.next;
            }else {
                temp.next = l2;
                l2 = l2.next;
            }
            temp = temp.next;
        }
        if(l1 != null)
            temp.next = l1;
        if(l2 != null)
            temp.next = l2;
        //temp.next = null;
        return node;
    }
}

//递归 好难想
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1==null)
            return l2;
        if(l2==null)  
            return l1;
        if(l1.val<l2.val){
            l1.next=mergeTwoLists(l1.next,l2);
            return l1;
        } 
        else{
            ListNode tmp=l2.next;
            l2.next=mergeTwoLists(l1,l2.next);
            return l2;
        }
    }
}