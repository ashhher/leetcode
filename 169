Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2

/******************************************************************************************************/
//我的 ac了 还是用的sort
import java.util.Arrays;
class Solution {
    public int majorityElement(int[] nums) {
        if(nums.length == 1)
            return nums[0];
        Arrays.sort(nums);
        int temp = nums[0];
        int count = 1;
        for(int i = 1;i < nums.length;i++) {
            if(nums[i] == temp)
                ++count;
            else if(count>(nums.length/2))
                return temp;
            else {
                temp = nums[i];
                count = 1;
            }
        }
        return temp;
    }
}